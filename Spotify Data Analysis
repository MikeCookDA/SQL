-- For this project, I was provided data downloaded from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

-- Creating the Table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

-- Then I inserted the Spotify Data .csv into the table.

-- Next, I explored the data and answered the following questions using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

-- What is the average energy level of songs by artist?
SELECT artist_name AS Artist, ROUND(AVG(energy),3) AS Energy
FROM BIT_DB.Spotifydata
GROUP BY Artist 
Order BY Energy DESC;

-- Who are the top 5 artists based on average song popularity?
SELECT artist_name AS Artist, AVG(popularity) AS Popularity
FROM BIT_DB.Spotifydata
GROUP BY Artist
ORDER BY Popularity DESC
LIMIT 5;

-- Which song has the highest danceability score? What are the top 5 songs with danceability?
SELECT artist_name AS Artist, track_name AS Song, danceability AS Danceability
FROM BIT_DB.Spotifydata
ORDER BY Danceability DESC
LIMIT 5;

-- What is the average loudness of songs by track?
SELECT artist_name AS Artist, track_name AS Song, AVG(loudness) AS Loudness
FROM BIT_DB.Spotifydata
GROUP BY Artist, Song
ORDER BY Loudness ASC;

-- What are the top 10 songs that have the longest duration?
SELECT artist_name AS Artist, track_name AS Song, duration_ms AS Duration
FROM BIT_DB.Spotifydata
ORDER BY Duration DESC
Limit 10;
